@model ContractAcceptanceModel
<div class="container-fluid flex-grow-1 container-p-y">
    <div style="display:none">
        @Html.TextBoxFor(c => c.PaymentAcceptanceId, new { @id = "PaymentContractAcceptanceId" })
        @Html.TextBoxFor(c => c.Id, new { @id = "ContractAcceptanceId" })
    </div>
    <div class="card">
        <div class="card-body pb-2">
            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        <nop-label asp-for="Name" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="Name" />
                        <span asp-validation-for="Name"></span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        <nop-label asp-for="Code" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="Code" />
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        <nop-label asp-for="Description" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="Description" />
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        <nop-label asp-for="ApprovalDate" />
                    </div>
                    <div class="col-md-9">
                        <nop-editor asp-for="ApprovalDate" />
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        <nop-label asp-for="AvailableTaskList" />
                    </div>
                    <div class="col-md-9">
                        <nop-select asp-for="SelectedListTaskId" asp-items="Model.AvailableTaskList" asp-multiple="true" />
                        <span id="ckCurrencys"></span>
                        <script>
                            $(document).ready(function() {
                                    var tasksIdsInput =
                                    $('#@Html.IdFor(model => model.SelectedListTaskId)')
                                        .data("kendoMultiSelect");
                                
                                    tasksIdsInput.setOptions({
                                    autoClose: true,
                                    filter: "contains"
                                });
                                tasksIdsInput.bind("select", SelectedTaskIdsSelect);
                                tasksIdsInput.bind("deselect", SelectedTaskIdsDeselect);
                                @if (Model.AvailableTaskList.Count == 0 || Model.TypeId != (int)GS.Core.Domain.Contracts.ContractAcceptancesType.KhoiLuong)
                                {
                                    <text>
                                        tasksIdsInput.setOptions({
                                            enable: false,
                                            placeholder:
                                           '@T("Admin.Contracts.ContractAcceptance.SelectedListTaskId.NoTaskAvailable")'
                                        });
                                        tasksIdsInput._placeholder();
                                        tasksIdsInput._enable();
                                    </text>
                                }
                            });
                            function SelectedTaskIdsDeselect(e) {
                                var TaskId = e.dataItem.value;
                                $("#AcceptanceSub_" + TaskId).remove();
                            }
                            $("#SelectedListTaskId").change(function () {
                                var _taskIds = $(this).val();
                                if (_taskIds.length > 0) {
                                    $.ajax({
                                        url: "/Contract/_CheckListCurrency?TaskIds=" + _taskIds,
                                        type: "GET",
                                        success: function (msg) {
                                            if (msg.Code == "00") {
                                                $("#ckCurrencys").html("<span style='color:red;'>* Chỉ nghiệm thu khối lượng những công việc cùng loại tiền.</span>")
                                                $("#ckCurrencys").show();
                                                $("#btnaddAcceptancesave").prop("disabled", true);
                                                
                                            } else {
                                                $("#ckCurrencys").html("");
                                                $("#ckCurrencys").hide();
                                                $("#btnaddAcceptancesave").prop("disabled", false);
                                            }
                                        },
                                        error: function (xhr, ajaxOptions, thrownError) {
                                            console.log("error");
                                        }
                                    })
                                }
                            });
                            function SelectedTaskIdsSelect(e) {
                                var TaskId = e.dataItem.value;
                                $.ajax({
                                    url: "/Contract/_ContractAcceptanceKhoiLuongSubAdd?TaskId=" + TaskId +"&contractAcceptanceId="+@Model.Id,
                                    type: "GET",
                                    success: function (data) {
                                        //console.log("data="+data);
                                        $("#ListPaymentAcceptanceSub").append(data);                                       
                                    },
                                    error: function (xhr, ajaxOptions, thrownError) {
                                        console.log("error");
                                    }
                                })
                            }
                        </script>
                    </div>
                </div>
            </div>
            <div class="card mb-4">
                <h6 class="card-header">
                    Nghiệm thu khối lượng theo hạng mục công việc
                </h6>
                <div class="text-muted small ml-3">

                </div>
                <div id="ListPaymentAcceptanceSub" class="card-body">
                    <div class="row" style="padding-bottom:10px;">
                        <div class="col-md-5">
                            <b>Hạng mục</b>
                        </div>
                        <div class="col-md-7 row">
                            <div class="col-sm-6">
                                <b>Giá trị đã nghiệm thu</b>
                            </div>
                            <div class="col-sm-6 number-input-long" style="padding-left:20px !important;">
                                <b>Giá trị nghiệm thu</b>
                            </div>
                        </div>                       
                    </div>
                    @foreach (ContractAcceptanceSubModel submodel in Model.listAcceptanceSub)
                    {
                        @await Html.PartialAsync("_ContractAcceptanceKhoiLuongSubAdd", submodel);
                    }
                </div>
                @*<div class="card-footer justify-content-between align-items-center px-0 pt-0 pb-3">
                    <div class="row" style="padding-top:23px;">
                        <div class="col-md-2 text-center">
                            <b>Tổng</b>
                        </div>                       
                    </div>
                </div>*@
            </div>
            <nop-editor asp-for="WorkFileIds" />
        </div>
    </div>
</div>
<div class="text-right mt-3">
    <button type="button" id="btnaddAcceptancesave" class="btn btn-primary">@T("admin.common.save")</button>&nbsp;
    <button type="button" id="btnaddAcceptanceCancel" class="btn btn-danger">@T("admin.common.cancel")</button>
</div>
<script>
    $(document).ready(function () {
        $("#@Html.IdFor(c=>c.TaskGroupId)").change(function () {
            var _id = $(this).val();
            $.ajax({
                type: "GET",
                url: "/TaskGroup/_getTaskGroupvalue?id=" + _id,
                success: function (data) {
                    if (data.Code == "00") {
                        $("#Ratio").data("kendoNumericTextBox").value(data.ObjectInfo.Ratio);
                    }
                    else {
                        $("#Ratio").data("kendoNumericTextBox").value(0);
                    }
                },
                error: function () {
                    $("#Ratio").data("kendoNumericTextBox").value(0);
                }
            })
        });
        $("#btnaddAcceptancesave").click(function () {
            kendo.ui.progress($("#contentCreate"), true);
            //var ResponsibleId = $("#ResponsibleId").data('kendoComboBox').value();
            var WorkFileIds = $("#@Html.IdFor(c=>c.WorkFileIds)").val();          
            if (WorkFileIds.length > 0) {
                var SelectedListFileId = WorkFileIds.split(',');
            }           
            var PaymentAcceptanceId = @Model.PaymentAcceptanceId.GetValueOrDefault(0);
            var listAcceptanceSub = [];
            $(".AcceptanceSub").each(function () {
                var TaskId = $(this).data("taskid");
                var TotalAmount = ConvertToNumber("#totalAmount_" + TaskId);
                var sub = {
                    TaskId: TaskId,
                    TotalAmount: TotalAmount
                }
                listAcceptanceSub.push(sub);
            });
            var _data = {
                Id:@Model.Id,
                TypeId:@Model.TypeId,
                Name: $("#@Html.IdFor(c=>c.Name)").val(),
                Code: $("#@Html.IdFor(c=>c.Code)").val(),
                Description: $("#@Html.IdFor(c=>c.Description)").val(),
                ContractId: @Model.ContractId,
                //ResponsibleId: ResponsibleId,
                ApprovalDate: $("#@Html.IdFor(c=>c.ApprovalDate)").val(),
                Ratio: $("#@Html.IdFor(c=>c.Ratio)").val(),
                CurrencyId:@Model.CurrencyId.GetValueOrDefault(0),
                SelectedListTaskId: $("#@Html.IdFor(c=>c.SelectedListTaskId)").val(),
                SelectedListFileId: SelectedListFileId,               
                PaymentAcceptanceId: PaymentAcceptanceId,
                listAcceptanceSub: listAcceptanceSub,
            };      
            $.ajax({
                cache: false,
                type: "POST",
                url: "/Contract/_ContractAcceptanceAdd",
                data: _data,
                success: function (data) {
                    //console.log(data);
                    if (CheckValidMessageReturn(data)) {
                        $("#tabContractAcceptance .close").click();
                        if (data.ObjectInfo.TypeId == @((int)GS.Core.Domain.Contracts.ContractAcceptancesType.KhoiLuong)) {
                            LoadTabContractAcceptance();
                        }
                        else if (data.ObjectInfo.TypeId == @((int)GS.Core.Domain.Contracts.ContractAcceptancesType.NoiBo)) {
                            loadContractAcceptanceNoiBo();
                        }
                        else if (data.ObjectInfo.TypeId == @((int)GS.Core.Domain.Contracts.ContractAcceptancesType.TamUng)) {
                            $("#modalAdvanceQuantity .close").click();
                            loadContractTaskChild(@Model.ContractId, 0);
                        }
                        else {
                            loadContractTaskChild(@Model.ContractId, 0);
                        }
                        ReloadPaymentPlan(@Model.ContractId);
                        //kendo.ui.progress($("#contentCreate"), false);
                        ShowSuccessMessage(data.Message);
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    LoadTabContractAcceptance();
                    ShowErrorMessage(data.Message);
                     alert('@T("Admin.common.request.error")');
                    $("#tabContractAcceptance .close").click();
                }
            });
        });
            $("#btnaddAcceptanceCancel").click(function () {
                $("#tabContractAcceptance .close").click();
            });
        });
</script>
@if (Model.hasPaymentAcceptance)
{
<script>
        $(document).ready(function () {
            var _tasksIdsInput = $('#@Html.IdFor(model => model.SelectedListTaskId)').data("kendoMultiSelect");
            _tasksIdsInput.enable(false);
            $(".AcceptanceSub").each(function () {
                var TaskId = $(this).data("taskid");
                $('#totalAmount_' + TaskId).attr("disabled","disabled");
            });
        });
</script>
}
<style>
    .listoption label span {
    padding-right: 20px;
}

    .listoption {
    padding-bottom: 20px;
}
</style>
